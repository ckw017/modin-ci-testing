name: ci
on: pull_request
jobs:
  test-ray-client:
    continue-on-error: true
    timeout-minutes: 30
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        with_lock: [True]
        python-version: ["3.7"]
        retries: [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16]
    env:
      MODIN_ENGINE: ray
      MODIN_MEMORY: 1000000000
      MODIN_TEST_RAY_CLIENT: "True"
    name: "test-ray-client (with_lock ${{matrix.with_lock}}, run #${{matrix.retries}})"
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 1
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: modin
          python-version: ${{matrix.python-version}}
          channel-priority: strict
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
      - run: pip install -r requirements-dev.txt
      - run: pip install -U https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-2.0.0.dev0-cp37-cp37m-manylinux2014_x86_64.whl
      - run: pip show ray
      - run: mv patched_worker.py /usr/share/miniconda/envs/modin/lib/python3.7/site-packages/ray/worker.py
        if: matrix.with_lock
      - name: Install HDF5
        run: sudo apt update && sudo apt install -y libhdf5-dev
      - run: MODIN_BENCHMARK_MODE=True pytest modin/pandas/test/internals/test_benchmark_mode.py
      - run: pytest modin/experimental/xgboost/test/test_default.py
      - run: pytest modin/pandas/test/dataframe/test_default.py
      - run: pytest modin/pandas/test/dataframe/test_iter.py
      # Broken on Ray 1.3.0
      # - run: pytest modin/pandas/test/dataframe/test_binary.py
      # - run: pytest modin/pandas/test/dataframe/test_join_sort.py
      # - run: pytest modin/pandas/test/dataframe/test_map_metadata.py
      # - run: pytest modin/pandas/test/dataframe/test_reduction.py
      # - run: pytest modin/pandas/test/dataframe/test_udf.py
      # - run: python -m pytest modin/pandas/test/test_groupby.py
      - run: pytest modin/pandas/test/dataframe/test_window.py
      - run: pytest modin/pandas/test/dataframe/test_pickle.py
      - run: python -m pytest modin/pandas/test/test_rolling.py
      - run: python -m pytest modin/pandas/test/test_reshape.py
      - run: python -m pytest modin/pandas/test/test_general.py
      - run: python -m pytest modin/pandas/test/test_io.py
      - run: python -m pytest modin/experimental/pandas/test/test_io_exp.py
      - run: pip install dfsql && pytest modin/experimental/sql/test/test_sql.py
      - run: |
          curl -o codecov https://codecov.io/bash
          VERSION=$(grep -o 'VERSION=\"[0-9\.]*\"' codecov | cut -d'"' -f2);
          curl -o SHA512SUM "https://raw.githubusercontent.com/codecov/codecov-bash/${VERSION}/SHA512SUM"
          if sha512sum -c --ignore-missing --status SHA512SUM; then
              bash ./codecov
          else
              echo 'CORRUPTED CODECOV SCRIPT!!!'
              exit 10
          fi
